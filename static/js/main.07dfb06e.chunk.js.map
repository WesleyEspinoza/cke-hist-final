{"version":3,"sources":["images/banner.png","images/history.png","data/citations.txt","data/events/1.txt","data/events/2.txt","data/events/3.txt","data/events/4.txt","data/events/5.txt","data/events/6.txt","images/events/1.jpeg","images/events/2.jpeg","images/events/3.png","images/events/4.jpeg","images/events/5.jpg","images/events/6.png","logo.svg","components/navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","props","createEvents","Array","numberOfEvents","map","event","index","NavDropdown","Item","onClick","changeEvent","Fragment","style","width","className","Image","height","src","history_logo","href","title","id","fontSize","color","this","Component","App","getFile","event_1_txt","event_2_txt","event_3_txt","event_4_txt","event_5_txt","event_6_txt","getImage","event_1_img","event_2_img","event_3_img","event_4_img","event_5_img","event_6_img","readCitations","rawFile","XMLHttpRequest","open","citations_txt","onreadystatechange","console","log","readyState","status","allText","responseText","state","send","readTextFile","file","textParts","split","name","body","events","length","currentEvent","getHomePageContent","womens_suffrage_image","fluid","Carousel","renderEvents","getCitationsPageContent","paddingTop","textAlign","display","citations","text","getEventContent","eventId","eventImage","maxWidth","padding","alt","Caption","renderContent","getNavBar","setState","i","slice","background","React","render","withRouter","document","getElementById","Boolean","window","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.07dfb06e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner.1fa55ae6.png\";","module.exports = __webpack_public_path__ + \"static/media/history.002edc45.png\";","module.exports = __webpack_public_path__ + \"static/media/citations.21383275.txt\";","module.exports = __webpack_public_path__ + \"static/media/1.9e248f92.txt\";","module.exports = __webpack_public_path__ + \"static/media/2.56b2d11e.txt\";","module.exports = __webpack_public_path__ + \"static/media/3.78122250.txt\";","module.exports = __webpack_public_path__ + \"static/media/4.8fc9ba52.txt\";","module.exports = __webpack_public_path__ + \"static/media/5.21b120b9.txt\";","module.exports = __webpack_public_path__ + \"static/media/6.22da82b1.txt\";","module.exports = __webpack_public_path__ + \"static/media/1.28f1f725.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/2.c0a4b56a.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/3.8fbbac66.png\";","module.exports = __webpack_public_path__ + \"static/media/4.20243be3.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/5.b36922de.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6.78c602c4.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport './componentCSS/Navbar.css'\nimport Image from 'react-bootstrap/Image'\nimport history_logo from '../images/history.png'\nimport Navbar from 'react-bootstrap/Navbar'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport Nav from 'react-bootstrap/Nav'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\n \nclass NavBar extends Component {\n\n  constructor(props) {\n    super(props)\n  }\n\n  componentDidMount(){\n  }\n\n  createEvents = () => {\n    const result = Array(this.props.numberOfEvents)\n    // Create obj\n    const obj = [\"Seneca Falls Convention\", \n                \"Declaration of Sentiments\", \n                \"Equal Pay Act\",\n                \"Margaret Sanger\",\n                \"National Organization for Women\",\n                \"Pressure Is a Privilege\"]\n\n    // map obj\n    return (\n      obj.map((event, index) => {\n        return (\n          <NavDropdown.Item\n            onClick={() => this.props.changeEvent(index)}\n          >\n            {event}\n          </NavDropdown.Item>\n        )\n      })\n    )\n    \n  } \n\n  render() {\n    return (\n      <React.Fragment style={{width: \"100%\"}}>\n        <div className=\"container\" style={{width: \"100%\"}}>\n          <nav className=\"navbar navbar-dark bg-dark mb-3\" style={{width: \"100%\"}}>\n          <div className=\"rowC\">\n            <div className=\"navItem\">\n              <Image style={{height: \"55px\"}} src={history_logo} />\n            </div>\n            <div className=\"navItem\">\n            <a className=\"navbar-brand\" onClick={() => this.props.changeEvent(-1)} href=\"#home\"><h1>Home</h1></a>\n            </div>\n            <div className=\"navItem\">\n            <a className=\"navbar-brand\" onClick={() => this.props.changeEvent(-2)} href=\"#citations\"><h1>Citations</h1></a>\n            </div>\n            <div className=\"navItem\" style={{width: \"150px\"}}>\n              <NavDropdown  title=\"Events\" id=\"collasible-nav-dropdown\" style={{width: \"150px\", fontSize: \"36px\", color: \"white\"}}>\n                {this.createEvents()}\n              </NavDropdown>\n            </div>\n          </div>\n        </nav>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n \nexport default NavBar;","import React from 'react';\nimport logo from './logo.svg';\nimport './css/App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NavBar from \"./components/navbar\";\nimport { render } from \"react-dom\";\nimport Image from 'react-bootstrap/Image'\nimport Carousel from 'react-bootstrap/Carousel'\nimport {withRouter} from 'react-router-dom';\n\n\nimport citations_txt from './data/citations.txt';\nimport event_1_txt from './data/events/1.txt';\nimport event_2_txt from './data/events/2.txt';\nimport event_3_txt from './data/events/3.txt';\nimport event_4_txt from './data/events/4.txt';\nimport event_5_txt from './data/events/5.txt';\nimport event_6_txt from './data/events/6.txt';\nimport womens_suffrage_image from './images/banner.png'\nimport event_1_img from './images/events/1.jpeg';\nimport event_2_img from './images/events/2.jpeg';\nimport event_3_img from './images/events/3.png';\nimport event_4_img from './images/events/4.jpeg';\nimport event_5_img from './images/events/5.jpg';\nimport event_6_img from './images/events/6.png';\n\nconst style = {\n  height: 25,\n  border: \"1px solid white\",\n  margin: 15,\n  padding: \"25%\",\n  backgroundColor: \"black\",\n  color: \"white\",\n  textAlign: \"left\",\n  \n};\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    console.log(\"props:\", props)\n    this.state = {\n      events: [\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n      ],\n      citations: null,\n      currentEvent: -1\n    };\n    for (let i = 0; i < this.state.events.length; i++) {\n      this.readTextFile(i)\n    }\n    this.readCitations()\n  }\n\n  getFile = (index) => {\n    switch (index) {\n      case 0:\n        return (event_1_txt)\n      case 1:\n        return (event_2_txt)\n      case 2:\n        return (event_3_txt)\n      case 3:\n        return (event_4_txt)\n      case 4:\n        return (event_5_txt)\n      case 5:\n        return (event_6_txt)\n    }\n  }\n\n  getImage = (index) => {\n    switch (index) {\n      case 0:\n        return (event_1_img)\n      case 1:\n        return (event_2_img)\n      case 2:\n        return (event_3_img)\n      case 3:\n        return (event_4_img)\n      case 4:\n        return (event_5_img)\n      case 5:\n        return (event_6_img)\n    }\n  }\n\n  //Wes or Henry: Feel free to DRY this code\n  readCitations = () => {\n\t\tconst rawFile = new XMLHttpRequest();\n\t\trawFile.open(\"GET\", citations_txt, false);\n\t\trawFile.onreadystatechange = () => {\n      console.log(\"Citations rawFile:\", rawFile)\n\t\t\tif (rawFile.readyState === 4) {\n\t\t\t\tif (rawFile.status === 200 || rawFile.status == 0) {\n          const allText = rawFile.responseText;\n        \n          //setState is not working inside of this internal function\n          this.state['citations'] = allText\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\trawFile.send(null);\n  }\n \n  readTextFile = (event) => {\n    const file = this.getFile(event)\n    console.log(\"reading file\")\n\t\tconst rawFile = new XMLHttpRequest();\n\t\trawFile.open(\"GET\", file, false);\n\t\trawFile.onreadystatechange = () => {\n      console.log(rawFile)\n\t\t\tif (rawFile.readyState === 4) {\n\t\t\t\tif (rawFile.status === 200 || rawFile.status == 0) {\n          const allText = rawFile.responseText;\n          const textParts = allText.split(\"{{START}}\")\n        \n          //setState is not working inside of this internal function\n          this.state['events'][event] = {\n            index: event,\n            name: textParts[1],\n            body: textParts[2]\n          }\n          if (event === this.state.events.length) {\n            this.state.currentEvent = 1\n          }\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\trawFile.send(null);\n  };\n\n  renderEvents() { \n    return this.state.events.map(event => (\n      <Carousel.Item\n        style={{padding: 100}}\n      >\n        <img\n          className=\"d-block\"\n          src={this.getImage(event['index'])}\n          alt={event[\"name\"]}\n          style={{\n            width: \"100%\", height: \"900px\",\n            \"-webkit-filter\": \"brightness(50%)\"\n          }}\n        />\n        <Carousel.Caption>\n          <h3>{event[\"name\"]}</h3>\n          <p style={{color: \"black\", paddingTop: \"150px\"}}>\n            {event[\"body\"].slice(0, 300) + \"...\"}\n          </p>\n        </Carousel.Caption>\n      </Carousel.Item>\n    ));\n  }\n\n  getHomePageContent = () => {\n    return (\n      <div>\n        <Image style={{width: \"100%\"}} src={womens_suffrage_image} fluid />\n        <hr />\n        <Carousel style={{width: \"100%\", height: \"900px\"}}>\n          { this.renderEvents() }\n        </Carousel>\n        <hr />\n      </div>\n    )\n  }\n\n  getCitationsPageContent = () => {\n    return (\n      <div>\n        <Image style={{width: \"100%\"}} src={womens_suffrage_image} fluid />\n        <hr />\n        <div style={{\n          paddingTop: '150px',\n          textAlign: 'center',\n          display: 'block'\n        }}>\n          <h1>Citations</h1>\n          <hr />\n          <span style={{color: \"white\"}}>\n            {this.state.citations.split('\\n').map(text => <p>{text}</p>)}\n            </span>\n        </div>\n        <hr />\n      </div>\n    )\n  }\n\n  getEventContent = (eventId) => {\n    const event = this.state.events[eventId]\n    const eventImage = this.getImage(eventId)\n    return (\n      <div style={{\n        paddingTop: '150px',\n        textAlign: 'center',\n        display: 'block'\n      }}>\n        \n        <Image style={{\n          maxWidth: \"100%\",\n          \"-webkit-filter\": \"brightness(50%)\"\n        }} src={eventImage} fluid />\n        <hr />\n        <h1>{event[\"name\"]}</h1>\n        <hr />\n        <Carousel style={{width: \"100%\", height: \"900px\"}}>\n          <Carousel.Item\n            style={{padding: 100}}\n          >\n            <img\n              className=\"d-block\"\n              src={this.getImage(event['index'])}\n              alt={event[\"name\"]}\n              style={{\n                width: \"100%\", height: \"900px\",\n                \"-webkit-filter\": \"brightness(50%)\"\n              }}\n            />\n            <Carousel.Caption>\n              <h3>{event[\"name\"]}</h3>\n            </Carousel.Caption>\n            <hr />\n            <p style={{color: \"black\"}}>\n              {event[\"body\"].split('\\n').map(text => <p>{text}</p>)}\n            </p>\n          </Carousel.Item>\n        </Carousel>\n      </div>\n    )\n  }\n\n  renderContent = () => {\n    if (this.state.currentEvent === -2) {\n      return this.getCitationsPageContent()\n    } else if (this.state.currentEvent >= 0 && this.state.currentEvent < this.state.events.length) {\n      return this.getEventContent(this.state.currentEvent)\n    } else {\n      return this.getHomePageContent()\n    }\n  }\n  \n  getNavBar = () => {\n    return ( \n        <NavBar numberOfEvents={this.state.events.length} changeEvent={(event) => {\n          console.log(\"New event:\", event)\n          this.setState({currentEvent: event})}\n        }\n        />\n    )\n  }\n\n\n  render() {\n    console.log('This.state:', this.state)\n    console.log('this.props', this.props)\n    return (\n      <div style={{background: \"black\"}}>\n        {this.getNavBar(this.state.currentEvent !== -1)}\n        <div style={{width: \"100%\", height: \"100%\"}}>\n          {this.renderContent()}\n        </div>\n      </div>\n    );\n  }\n}\n\nrender(withRouter(props => <App {...props} />), document.getElementById(\"root\"));\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport NavBar from \"./components/navbar\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}